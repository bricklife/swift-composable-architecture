{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"scrollTransition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"configuration","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","text":"ScrollTransitionConfiguration"},{"text":" = .interactive, ","kind":"text"},{"text":"axis","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Axis","preciseIdentifier":"s:7SwiftUI4AxisO"},{"text":"? = nil, ","kind":"text"},{"text":"transition","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV","text":"EmptyVisualEffect"},{"kind":"text","text":", "},{"text":"ScrollTransitionPhase","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI21ScrollTransitionPhaseO"},{"text":") -> some ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI12VisualEffectP","text":"VisualEffect","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}]}],"metadata":{"extendedModule":"SwiftUICore","platforms":[{"beta":false,"introducedAt":"17.0","unavailable":false,"deprecated":false,"name":"iOS"},{"beta":false,"introducedAt":"14.0","deprecated":false,"name":"macOS","unavailable":false},{"beta":false,"introducedAt":"17.0","deprecated":false,"name":"tvOS","unavailable":false},{"unavailable":false,"beta":false,"deprecated":false,"name":"watchOS","introducedAt":"10.0"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"scrollTransition","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","kind":"typeIdentifier","text":"ScrollTransitionConfiguration"},{"kind":"text","text":", "},{"kind":"externalParam","text":"axis"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4AxisO","text":"Axis"},{"text":"?, ","kind":"text"},{"text":"transition","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV","text":"EmptyVisualEffect","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7SwiftUI21ScrollTransitionPhaseO","text":"ScrollTransitionPhase","kind":"typeIdentifier"},{"kind":"text","text":") -> some "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI12VisualEffectP","text":"VisualEffect"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:7SwiftUI4ViewPAAE16scrollTransition_4axis10transitionQrAA06ScrollE13ConfigurationV_AA4AxisOSgqd__AA17EmptyVisualEffectV_AA0hE5PhaseOtYbctAA0lM0Rd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","symbolKind":"method","title":"scrollTransition(_:axis:transition:)"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.scrollTransition(_:axis:transition:)","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/scrollTransition(_:axis:transition:)"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/scrolltransition(_:axis:transition:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"title":"View Implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/scrollTransition(_:axis:transition:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/scrollTransition(_:axis:transition:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"scrollTransition","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","text":"ScrollTransitionConfiguration","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"axis","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4AxisO","text":"Axis"},{"kind":"text","text":"?, "},{"text":"transition","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV","text":"EmptyVisualEffect"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI21ScrollTransitionPhaseO","text":"ScrollTransitionPhase"},{"text":") -> some ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI12VisualEffectP","kind":"typeIdentifier","text":"VisualEffect"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"type":"topic","title":"scrollTransition(_:axis:transition:)","kind":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/ifletstore\/scrolltransition(_:axis:transition:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","kind":"article","type":"topic","title":"Deprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"url":"\/documentation\/composablearchitecture\/ifletstore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"title":"IfLetStore","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"deprecated":true}}}