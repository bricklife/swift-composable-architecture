{"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ModelValue"},{"kind":"text","text":", "},{"text":"ViewValue","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"ModelValue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"ViewValue","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"symbolKind":"method","roleHeading":"Instance Method","extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewP0A10NavigationE4bind_2toQrqd___qd_0_tAD9_BindableRd__AdGRd_0_SQ5ValueRpd__AHQyd_0_AIRSr0_lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","platforms":[{"introducedAt":"14.0","name":"iOS","unavailable":false,"deprecated":false,"beta":false},{"deprecated":false,"name":"macOS","unavailable":false,"beta":false,"introducedAt":"11.0"},{"introducedAt":"14.0","deprecated":false,"unavailable":false,"beta":false,"name":"tvOS"},{"unavailable":false,"introducedAt":"7.0","deprecated":false,"beta":false,"name":"watchOS"}],"role":"symbol","title":"bind(_:to:)","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bind"},{"kind":"text","text":"<"},{"text":"ModelValue","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewValue"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"modelValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"text":" ","kind":"text"},{"text":"viewValue","kind":"internalParam"},{"kind":"text","text":": "},{"text":"ViewValue","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":" : "},{"text":"_Bindable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ViewValue"},{"text":" : ","kind":"text"},{"text":"_Bindable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ModelValue","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:15SwiftNavigation9_BindableP5ValueQa","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":"."},{"preciseIdentifier":"s:15SwiftNavigation9_BindableP5ValueQa","text":"Value","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"ViewValue","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:15SwiftNavigation9_BindableP5ValueQa","text":"Value"},{"kind":"text","text":"\n"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/bind(_:to:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/bind(_:to:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.bind(_:to:)","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"title":"View Implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"url":"\/documentation\/composablearchitecture\/ifletstore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"title":"IfLetStore","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","kind":"article","type":"topic","title":"Deprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/bind(_:to:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/bind(_:to:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"bind","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ModelValue"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ViewValue"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":", "},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"kind":"symbol","title":"bind(_:to:)","abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/bind(_:to:)"}}}