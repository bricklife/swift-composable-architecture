{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.chartSymbolScale(domain:range:)"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartsymbolscale(domain:range:)-g575"]}],"kind":"symbol","metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:7SwiftUI4ViewP6ChartsE16chartSymbolScale6domain5rangeQrqd___SayAD05ChartF5Shape_pGtAD0G6DomainRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","extendedModule":"SwiftUICore","title":"chartSymbolScale(domain:range:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartSymbolScale","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Domain","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"domain","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Domain","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": [any ","kind":"text"},{"text":"ChartSymbolShape","kind":"typeIdentifier","preciseIdentifier":"s:6Charts16ChartSymbolShapeP"},{"kind":"text","text":"]) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"platforms":[{"deprecated":false,"beta":false,"name":"iOS","introducedAt":"16.0","unavailable":false},{"introducedAt":"13.0","deprecated":false,"name":"macOS","unavailable":false,"beta":false},{"name":"tvOS","deprecated":false,"introducedAt":"16.0","beta":false,"unavailable":false},{"unavailable":false,"name":"watchOS","deprecated":false,"beta":false,"introducedAt":"9.0"}],"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartSymbolScale"},{"text":"<","kind":"text"},{"text":"Domain","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"domain","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Domain","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"range","kind":"externalParam"},{"text":": [any ","kind":"text"},{"text":"ChartSymbolShape","kind":"typeIdentifier","preciseIdentifier":"s:6Charts16ChartSymbolShapeP"},{"kind":"text","text":"]) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Domain"},{"text":" : ","kind":"text"},{"text":"ScaleDomain","kind":"typeIdentifier","preciseIdentifier":"s:6Charts11ScaleDomainP"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartSymbolScale(domain:range:)-g575","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","kind":"article","type":"topic","title":"Deprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"title":"View Implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartSymbolScale(domain:range:)-g575":{"abstract":[],"title":"chartSymbolScale(domain:range:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"chartSymbolScale","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Domain"},{"kind":"text","text":">("},{"text":"domain","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Domain"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"range"},{"kind":"text","text":": [any "},{"kind":"typeIdentifier","text":"ChartSymbolShape","preciseIdentifier":"s:6Charts16ChartSymbolShapeP"},{"kind":"text","text":"]) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore\/chartsymbolscale(domain:range:)-g575","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartSymbolScale(domain:range:)-g575"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"url":"\/documentation\/composablearchitecture\/ifletstore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"title":"IfLetStore","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"deprecated":true}}}