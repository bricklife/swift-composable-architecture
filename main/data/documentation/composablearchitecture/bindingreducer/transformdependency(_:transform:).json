{"abstract":[{"text":"Transform a reducer’s dependency value at the specified key path with the given function.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations"]]},"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/transformDependency(_:transform:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","title":"transformDependency(_:transform:)","extendedModule":"ComposableArchitecture","externalID":"s:22ComposableArchitecture7ReducerPAAE19transformDependency_0D0AA01_e10KeyWritingC0VyxGs08WritableF4PathCy12Dependencies0E6ValuesVqd__G_yqd__zctlF::SYNTHESIZED::s:22ComposableArchitecture14BindingReducerV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transformDependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"kind":"text","text":", "},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@warn_unqualified_access","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transformDependency"},{"kind":"text","text":"<"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keyPath"},{"text":": ","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"DependencyValues","kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"transform","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A key path that indicates the property of the ","type":"text"},{"type":"codeVoice","code":"DependencyValues"},{"text":" structure to","type":"text"},{"text":" ","type":"text"},{"text":"transform.","type":"text"}]}],"name":"keyPath"},{"content":[{"inlineContent":[{"text":"A closure that is handed a mutable instance of the value specified by the key","type":"text"},{"type":"text","text":" "},{"type":"text","text":"path."}],"type":"paragraph"}],"name":"transform"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This is similar to ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/dependency(_:_:)","isActive":true},{"text":", except it allows you to mutate a dependency value","type":"text"},{"text":" ","type":"text"},{"text":"directly. This can be handy when you want to alter a dependency but still use its current","type":"text"},{"type":"text","text":" "},{"text":"value.","type":"text"}]},{"inlineContent":[{"type":"text","text":"For example, suppose you want to see when a particular endpoint of a dependency gets called"},{"type":"text","text":" "},{"type":"text","text":"in your application. You can override that endpoint to insert a breakpoint or print statement,"},{"type":"text","text":" "},{"type":"text","text":"but still call out to the original endpoint:"}],"type":"paragraph"},{"code":["  Feature()","    .transformDependency(\\.speechClient) { speechClient in","      speechClient.requestAuthorization = {","        print(\"requestAuthorization\")","        try await speechClient.requestAuthorization()","      }","    }"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"You can also transform ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"all"}]},{"type":"text","text":" dependency values at once by using the "},{"code":"\\.self","type":"codeVoice"},{"text":" key path:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["Feature()","  .transformDependency(\\.self) { dependencyValues in","    \/\/ Access to all dependencies in here","  }"]},{"name":"Warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The trailing closure of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/transformDependency(_:transform:)"},{"text":" is called for every","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"action sent to the reducer, and so you can expect it to be called many times in an"},{"text":" ","type":"text"},{"text":"application’s lifecycle. This means you should typically not create dependencies in the","type":"text"},{"type":"text","text":" "},{"text":"closure as that will cause a new dependency to be created everytime an action is sent.","type":"text"}]}],"style":"warning","type":"aside"}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/bindingreducer\/transformdependency(_:transform:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/Reducer-Implementations":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations","title":"Reducer Implementations","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/bindingreducer\/reducer-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"type":"topic","abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/bindingreducer","title":"BindingReducer","navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/dependency(_:_:)":{"url":"\/documentation\/composablearchitecture\/bindingreducer\/dependency(_:_:)","abstract":[{"text":"Sets the dependency value of the specified key path to the given value.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/dependency(_:_:)","title":"dependency(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependency","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"DependencyValues","kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/transformDependency(_:transform:)":{"abstract":[{"type":"text","text":"Transform a reducer’s dependency value at the specified key path with the given function."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/transformDependency(_:transform:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"transformDependency","kind":"identifier"},{"kind":"text","text":"<"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"transform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"transformDependency(_:transform:)","url":"\/documentation\/composablearchitecture\/bindingreducer\/transformdependency(_:transform:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"}}}