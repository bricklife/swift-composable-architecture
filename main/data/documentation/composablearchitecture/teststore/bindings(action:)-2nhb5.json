{"seeAlsoSections":[{"title":"Bindings","generated":true,"anchor":"Bindings","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/bindings(action:)-2nhb5"]}],"metadata":{"role":"symbol","extendedModule":"ComposableArchitecture","title":"bindings(action:)","externalID":"s:22ComposableArchitecture9TestStoreC8bindings6actionAA011BindingViewD0VyxGs7KeyPathCy9CasePaths0K0Vyq_GAMyqd__GG_t5StateQyd__RszAK0K8PathableR_AA14BindableActionRd__lF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"bindings"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ViewAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"BindingViewStore","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":">","kind":"text"}],"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","symbolKind":"method"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreDeprecations"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)-2nhb5","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bindings"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ViewAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":" "},{"kind":"internalParam","text":"toViewAction"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"BindingViewStore","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":" == ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa","text":"State"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"CasePathable","preciseIdentifier":"s:9CasePaths0A8PathableP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","text":"BindableAction","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A case path from action to a bindable view action.","type":"text"}]}],"name":"toViewAction"}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A binding view store.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Useful for testing view state of a store."}],"type":"paragraph"},{"syntax":"swift","code":["let store = TestStore(LoginFeature.State()) {","  Login.Feature()","}","await store.send(.view(.set(\\.$email, \"blob@pointfree.co\"))) {","  $0.email = \"blob@pointfree.co\"","}","XCTAssertTrue(","  LoginView.ViewState(store.bindings(action: \\.view))","    .isLoginButtonDisabled",")","","await store.send(.view(.set(\\.$password, \"whats-the-point?\"))) {","  $0.password = \"blob@pointfree.co\"","  $0.isFormValid = true","}","XCTAssertFalse(","  LoginView.ViewState(store.bindings(action: \\.view))","    .isLoginButtonDisabled",")"],"type":"codeListing"}]}],"abstract":[{"type":"text","text":"Returns a binding view store for this store."}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/State":{"abstract":[{"type":"text","text":"The root state type that contains bindable fields."}],"kind":"symbol","required":true,"role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"title":"State","url":"\/documentation\/composablearchitecture\/bindableaction\/state","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindableAction"}],"navigatorTitle":[{"text":"BindableAction","kind":"identifier"}],"title":"BindableAction","role":"symbol","url":"\/documentation\/composablearchitecture\/bindableaction","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","abstract":[{"type":"text","text":"An action type that exposes a "},{"code":"binding","type":"codeVoice"},{"text":" case that holds a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction"},{"type":"text","text":"."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"url":"\/documentation\/composablearchitecture\/bindingviewstore","abstract":[{"type":"text","text":"A property wrapper type that can derive "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","isActive":true,"type":"reference"},{"text":" values for a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"text":".","type":"text"}],"navigatorTitle":[{"text":"BindingViewStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingViewStore","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"BindingViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingViewState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingviewstate","type":"topic","title":"BindingViewState","navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"text":" ","type":"text"},{"type":"text","text":"bindable in SwiftUI views."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreDeprecations":{"kind":"article","abstract":[{"type":"text","text":"Review unsupported test store APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/teststoredeprecations","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreDeprecations","type":"topic","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"abstract":[{"text":"An action that describes simple mutations to some root state at a writable key path.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"BindingAction","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingAction"}],"title":"BindingAction","url":"\/documentation\/composablearchitecture\/bindingaction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewStore","kind":"identifier"}],"deprecated":true,"title":"ViewStore","url":"\/documentation\/composablearchitecture\/viewstore","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"type":"text","text":" "},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/bindings":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Action.State","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Action","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"BindableAction","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings","url":"\/documentation\/composablearchitecture\/teststore\/bindings","role":"symbol","title":"bindings","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bindings","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"BindingViewStore","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a binding view store for this store."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/bindings(action:)-2nhb5":{"type":"topic","abstract":[{"type":"text","text":"Returns a binding view store for this store."}],"title":"bindings(action:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)-2nhb5","kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/bindings(action:)-2nhb5","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bindings"},{"kind":"text","text":"<"},{"text":"ViewAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"text":">) -> ","kind":"text"},{"text":"BindingViewStore","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"url":"\/documentation\/composablearchitecture\/teststore","kind":"symbol","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"title":"TestStore","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}]}}}