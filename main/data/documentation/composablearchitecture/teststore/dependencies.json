{"metadata":{"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:22ComposableArchitecture9TestStoreC12dependencies12Dependencies16DependencyValuesVvp","title":"dependencies","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependencies","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier","text":"DependencyValues"}]},"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/useMainSerialExecutor"],"generated":true,"title":"Configuring a test store","anchor":"Configuring-a-test-store"}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"The current dependencies of the test store."}],"topicSections":[{"title":"Configuring exhaustivity","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-61in2"],"anchor":"Configuring-exhaustivity"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/dependencies"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"dependencies","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier","text":"DependencyValues"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The dependencies define the execution context that your feature runs in. They can be modified"},{"type":"text","text":" "},{"type":"text","text":"throughout the test store’s lifecycle in order to influence how your feature produces effects."}]},{"type":"paragraph","inlineContent":[{"text":"Typically you will override certain dependencies immediately after constructing the test","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"store. For example, if your feature need access to the current date and an API client to do"},{"type":"text","text":" "},{"text":"its job, you can override those dependencies like so:","type":"text"}]},{"syntax":"swift","code":["let store = TestStore(\/* ... *\/) {","  $0.apiClient = .mock","  $0.date = .constant(Date(timeIntervalSinceReferenceDate: 1234567890))","}","","\/\/ Store assertions here"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also override dependencies in the middle of the test in order to simulate how the"},{"type":"text","text":" "},{"type":"text","text":"dependency changes as the user performs action. For example, to test the flow of an API"},{"type":"text","text":" "},{"type":"text","text":"request failing at first but then later succeeding, you can do the following:"}]},{"syntax":"swift","code":["store.dependencies.apiClient = .failing","","store.send(.buttonTapped) { \/* ... *\/ }","store.receive(\\.searchResponse.failure) { \/* ... *\/ }","","store.dependencies.apiClient = .mock","","store.send(.buttonTapped) { \/* ... *\/ }","store.receive(\\.searchResponse.success) { \/* ... *\/ }"],"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/dependencies"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/withDependencies(_:operation:)-61in2":{"url":"\/documentation\/composablearchitecture\/teststore\/withdependencies(_:operation:)-61in2","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-61in2","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withDependencies","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"operation"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"}],"title":"withDependencies(_:operation:)","abstract":[{"type":"text","text":"Overrides the store’s dependencies for a given operation."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"type":"topic","abstract":[{"text":"The current exhaustivity level of the test store.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"exhaustivity"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","text":"Exhaustivity","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","title":"exhaustivity","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/dependencies":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependencies"},{"kind":"text","text":": "},{"text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier"}],"abstract":[{"text":"The current dependencies of the test store.","type":"text"}],"title":"dependencies","type":"topic","url":"\/documentation\/composablearchitecture\/teststore\/dependencies","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/dependencies"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/useMainSerialExecutor":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/useMainSerialExecutor","url":"\/documentation\/composablearchitecture\/teststore\/usemainserialexecutor","role":"symbol","title":"useMainSerialExecutor","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"useMainSerialExecutor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","abstract":[{"text":"Serializes all async work to the main thread for the lifetime of the test store.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/timeout":{"kind":"symbol","abstract":[{"type":"text","text":"The default timeout used in all methods that take an optional timeout."}],"url":"\/documentation\/composablearchitecture\/teststore\/timeout","title":"timeout","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"timeout"},{"kind":"text","text":": "},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"}],"type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"url":"\/documentation\/composablearchitecture\/teststore","kind":"symbol","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"title":"TestStore","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}]}}}