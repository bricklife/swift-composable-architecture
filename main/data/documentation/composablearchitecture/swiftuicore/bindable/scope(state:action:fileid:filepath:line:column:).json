{"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore\/Bindable"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"Scopes the binding of a store to a binding of an optional presentation store."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#fileID"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"text":"#fileID","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"text":"#line","kind":"keyword"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#column","kind":"keyword"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Store","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">?> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"text":">, ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"ObservableState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture15ObservableStateP","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A key path to optional child state.","type":"text"}],"type":"paragraph"}],"name":"state"},{"name":"action","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A case key path to presentation child actions."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A binding of an optional child store."}]}]},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this operator to derive a binding that can be handed to SwiftUI’s various navigation"},{"type":"text","text":" "},{"text":"view modifiers, such as ","type":"text"},{"type":"codeVoice","code":"sheet(item:)"},{"text":", ","type":"text"},{"type":"codeVoice","code":"popover(item:)"},{"type":"text","text":", etc."}]},{"type":"paragraph","inlineContent":[{"text":"For example, suppose your feature can present a child feature in a sheet. Then your","type":"text"},{"type":"text","text":" "},{"type":"text","text":"feature’s domain would hold onto the child’s domain using the library’s presentation tools"},{"type":"text","text":" "},{"type":"text","text":"(see "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","type":"reference","isActive":true},{"type":"text","text":" for more information on these tools):"}]},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct Feature {","  @ObservableState","  struct State {","    @Presents var child: Child.State?","    \/\/ ...","  }","  enum Action {","    case child(PresentationActionOf<Child>)","    \/\/ ...","  }","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then you can derive a binding to the child domain that can be handed to the "},{"code":"sheet(item:)","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"view modifier:"}]},{"syntax":"swift","code":["struct FeatureView: View {","  @Bindable var store: StoreOf<Feature>","","  var body: some View {","    \/\/ ...","    .sheet(item: $store.scope(state: \\.child, action: \\.child)) { store in","      ChildView(store: store)","    }","  }","}"],"type":"codeListing"}],"kind":"content"}],"metadata":{"extendedModule":"SwiftUICore","role":"symbol","title":"scope(state:action:fileID:filePath:line:column:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChildState","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">?>","kind":"text"}],"roleHeading":"Instance Method","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"externalID":"s:7SwiftUI8BindableV22ComposableArchitectureE5scope5state6action6fileID0I4Path4line6columnAA7BindingVyAD5StoreCyqd_1_qd_2_GSgGs03KeyK0Cyqd__qd_1_SgG_ATy9CasePaths0Q0Vyqd_0_GAYyAD18PresentationActionOyqd_2_GGGs12StaticStringVA5_S2utAOyqd__qd_0_GRszAD15ObservableStateRd__r2_lF","platforms":[{"introducedAt":"17.0","beta":false,"unavailable":false,"deprecated":false,"name":"iOS"},{"unavailable":false,"beta":false,"name":"macOS","deprecated":false,"introducedAt":"14.0"},{"name":"tvOS","introducedAt":"17.0","unavailable":false,"beta":false,"deprecated":false},{"beta":false,"name":"watchOS","deprecated":false,"unavailable":false,"introducedAt":"10.0"}],"symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore\/Bindable\/scope(state:action:fileID:filePath:line:column:)"},"variants":[{"paths":["\/documentation\/composablearchitecture\/swiftuicore\/bindable\/scope(state:action:fileid:filepath:line:column:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"abstract":[{"type":"text","text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including"},{"text":" ","type":"text"},{"text":"how to model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"url":"\/documentation\/composablearchitecture\/treebasednavigation","kind":"article","title":"Tree-based navigation","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUICore/Bindable/scope(state:action:fileID:filePath:line:column:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"text":"state","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction"},{"text":"<","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") -> ","kind":"text"},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">?>","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Scopes the binding of a store to a binding of an optional presentation store."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuicore\/bindable\/scope(state:action:fileid:filepath:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore\/Bindable\/scope(state:action:fileID:filePath:line:column:)","title":"scope(state:action:fileID:filePath:line:column:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUICore":{"url":"\/documentation\/composablearchitecture\/swiftuicore","title":"SwiftUICore","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore","role":"collection","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUICore/Bindable":{"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuicore\/bindable","role":"symbol","title":"Bindable","navigatorTitle":[{"text":"Bindable","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore\/Bindable","kind":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bindable","kind":"identifier","preciseIdentifier":"s:7SwiftUI8BindableV"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PresentationAction"}],"url":"\/documentation\/composablearchitecture\/presentationaction","title":"PresentationAction","navigatorTitle":[{"text":"PresentationAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"ObservableState"}],"url":"\/documentation\/composablearchitecture\/observablestate","role":"symbol","title":"ObservableState","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"title":"Store","role":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}]}}}