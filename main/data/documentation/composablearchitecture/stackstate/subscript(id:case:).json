{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"subscript"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Case"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":" "},{"text":"id","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StackElementID","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"case"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":"? "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"CasePathable","preciseIdentifier":"s:9CasePaths0A8PathableP","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When using stack-based navigation (see "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","isActive":true},{"text":") you will typically have a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"single enum that represents all of the destinations that can be pushed onto the stack, and you"},{"text":" ","type":"text"},{"type":"text","text":"will hold that state in "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true},{"text":":","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct State {","  var path = StackState<Path.State>()","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this subscript for a succinct syntax to modify the data in a particular case of"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":"Path.State"},{"type":"text","text":" enum, like so:"}]},{"type":"codeListing","syntax":"swift","code":["state.path[id: 0, case: \\.edit]?.alert = AlertState {","  Text(\"Delete?\")","}"]},{"name":"Important","style":"important","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Accessing the wrong case will result in a runtime warning and test failure."}],"type":"paragraph"}]}],"kind":"content"}],"metadata":{"fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Case"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":" _: "},{"text":"StackElementID","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"case"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Case"},{"text":">) -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"subscript","roleHeading":"Instance Subscript","externalID":"s:22ComposableArchitecture10StackStateV2id4caseqd__SgAA0C9ElementIDV_s7KeyPathCy9CasePaths0K0VyxGAMyqd__GGtcAK0K8PathableRzluip","role":"symbol","title":"subscript(id:case:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/stackstate\/subscript(id:case:)"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/subscript(id:case:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"]]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Accesses the value associated with the given id and case for reading and writing."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackState"}],"navigatorTitle":[{"kind":"identifier","text":"StackState"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","type":"topic","abstract":[{"type":"text","text":"A list of data representing the content of a navigation stack."}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/stackstate","title":"StackState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","type":"topic","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","title":"Navigation","kind":"article","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"StackElementID","kind":"identifier"}],"title":"StackElementID","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","navigatorTitle":[{"kind":"identifier","text":"StackElementID"}],"type":"topic","url":"\/documentation\/composablearchitecture\/stackelementid","role":"symbol","abstract":[{"text":"An opaque type that identifies an element of ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","type":"reference","isActive":true},{"text":".","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState/subscript(id:case:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/subscript(id:case:)","url":"\/documentation\/composablearchitecture\/stackstate\/subscript(id:case:)","role":"symbol","title":"subscript(id:case:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Case"},{"kind":"text","text":">("},{"text":"id","kind":"externalParam"},{"kind":"text","text":" _: "},{"text":"StackElementID","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"case"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[{"type":"text","text":"Accesses the value associated with the given id and case for reading and writing."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","url":"\/documentation\/composablearchitecture\/stackbasednavigation","role":"article","title":"Stack-based navigation","kind":"article","abstract":[{"type":"text","text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to"},{"text":" ","type":"text"},{"type":"text","text":"model your domains, how to integrate features, how to test your features, and more."}]}}}