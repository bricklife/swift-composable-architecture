{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Sends an action to the store.","type":"text"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/store\/send(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask"],"generated":true,"title":"Sending actions","anchor":"Sending-actions"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","kind":"typeIdentifier","text":"StoreTask","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An action.","type":"text"}]}],"name":"action"}]},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","isActive":true},{"type":"text","text":" that represents the lifecycle of the effect executed when"},{"text":" ","type":"text"},{"text":"sending the action.","type":"text"}]}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method returns a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","isActive":true,"type":"reference"},{"text":", which represents the lifecycle of the effect started from","type":"text"},{"type":"text","text":" "},{"text":"sending an action. You can use this value to tie the effect’s lifecycle ","type":"text"},{"inlineContent":[{"text":"and","type":"text"}],"type":"emphasis"},{"type":"text","text":" cancellation to"},{"type":"text","text":" "},{"text":"an asynchronous context, such as SwiftUI’s ","type":"text"},{"type":"codeVoice","code":"task"},{"type":"text","text":" view modifier:"}]},{"type":"codeListing","code":[".task { await store.send(.task).finish() }"],"syntax":"swift"},{"style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"text":" is not thread safe and you should only send actions to it from the","type":"text"},{"text":" ","type":"text"},{"text":"main thread. If you want to send actions on background threads due to the fact that the","type":"text"},{"type":"text","text":" "},{"text":"reducer is performing computationally expensive work, then a better way to handle this is to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"wrap that work in an "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"text":" that is performed on a background thread so that the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"result can be fed back into the store."}]}],"type":"aside"}],"kind":"content"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","title":"send(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"StoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}],"externalID":"s:22ComposableArchitecture5StoreC4sendyAA0C4TaskVq_F","roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture"}]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:transaction:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/send(_:transaction:)","type":"topic","role":"symbol","title":"send(_:transaction:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transaction"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Transaction","preciseIdentifier":"s:7SwiftUI11TransactionV"},{"kind":"text","text":") -> "},{"text":"StoreTask","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Sends an action to the store with a given transaction."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreTask":{"role":"symbol","type":"topic","title":"StoreTask","url":"\/documentation\/composablearchitecture\/storetask","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoreTask","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"StoreTask","kind":"identifier"}],"abstract":[{"type":"text","text":"The type returned from "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","isActive":true},{"text":" that represents the lifecycle of the effect","type":"text"},{"type":"text","text":" "},{"type":"text","text":"started from sending an action."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask","kind":"typeIdentifier"}],"type":"topic","title":"send(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/send(_:)","role":"symbol","abstract":[{"text":"Sends an action to the store.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:animation:)":{"title":"send(_:animation:)","url":"\/documentation\/composablearchitecture\/store\/send(_:animation:)","abstract":[{"type":"text","text":"Sends an action to the store with a given animation."}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"animation"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI9AnimationV","kind":"typeIdentifier","text":"Animation"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"StoreTask","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"title":"Store","role":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}]}}}