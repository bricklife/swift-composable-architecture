{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/chartxscale(domain:range:type:)"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartXScale"},{"kind":"text","text":"<"},{"text":"Domain","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Range"},{"kind":"text","text":">("},{"text":"domain","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Domain"},{"kind":"text","text":", "},{"text":"range","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"type","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ScaleType","kind":"typeIdentifier","preciseIdentifier":"s:6Charts9ScaleTypeV"},{"kind":"text","text":"? = nil) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Domain"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"ScaleDomain","preciseIdentifier":"s:6Charts11ScaleDomainP"},{"text":", ","kind":"text"},{"text":"Range","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"PositionScaleRange","preciseIdentifier":"s:6Charts18PositionScaleRangeP"},{"kind":"text","text":"\n"}]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.chartXScale(domain:range:type:)","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/chartXScale(domain:range:type:)","interfaceLanguage":"swift"},"metadata":{"title":"chartXScale(domain:range:type:)","roleHeading":"Instance Method","externalID":"s:7SwiftUI4ViewP6ChartsE11chartXScale6domain5range4typeQrqd___qd_0_AD9ScaleTypeVSgtAD0J6DomainRd__AD08PositionJ5RangeRd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","extendedModule":"SwiftUICore","role":"symbol","symbolKind":"method","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"platforms":[{"beta":false,"deprecated":false,"name":"iOS","introducedAt":"16.0","unavailable":false},{"deprecated":false,"name":"macOS","unavailable":false,"beta":false,"introducedAt":"13.0"},{"deprecated":false,"name":"tvOS","introducedAt":"16.0","unavailable":false,"beta":false},{"unavailable":false,"introducedAt":"9.0","name":"watchOS","deprecated":false,"beta":false}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartXScale"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Domain"},{"kind":"text","text":", "},{"text":"Range","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"domain"},{"kind":"text","text":": "},{"text":"Domain","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"range","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6Charts9ScaleTypeV","text":"ScaleType"},{"text":"?) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/chartXScale(domain:range:type:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartXScale"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Domain"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Range"},{"text":">(","kind":"text"},{"text":"domain","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Domain","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"range","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Range"},{"kind":"text","text":", "},{"text":"type","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Charts9ScaleTypeV","kind":"typeIdentifier","text":"ScaleType"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/caselet\/chartxscale(domain:range:type:)","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/chartXScale(domain:range:type:)","type":"topic","title":"chartXScale(domain:range:type:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","kind":"article","type":"topic","title":"Deprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"url":"\/documentation\/composablearchitecture\/caselet","type":"topic","deprecated":true,"kind":"symbol","title":"CaseLet","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"title":"View Implementations","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"title":"SwitchStore","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"topic","url":"\/documentation\/composablearchitecture\/switchstore","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference","isActive":true},{"type":"text","text":" views."}],"kind":"symbol","role":"symbol"}}}