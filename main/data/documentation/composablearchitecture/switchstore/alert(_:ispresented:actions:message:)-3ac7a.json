{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.alert(_:isPresented:actions:message:)"},{"text":".","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/switchstore\/alert(_:ispresented:actions:message:)-3ac7a"]}],"metadata":{"externalID":"s:7SwiftUI4ViewPAAE5alert_11isPresented7actions7messageQrAA4TextV_AA7BindingVySbGqd__yXEqd_0_yXEtAaBRd__AaBRd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","role":"symbol","title":"alert(_:isPresented:actions:message:)","extendedModule":"SwiftUICore","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"platforms":[{"deprecated":false,"introducedAt":"15.0","name":"iOS","unavailable":false,"beta":false},{"deprecated":false,"introducedAt":"12.0","name":"macOS","unavailable":false,"beta":false},{"unavailable":false,"beta":false,"introducedAt":"15.0","deprecated":false,"name":"tvOS"},{"introducedAt":"8.0","deprecated":false,"unavailable":false,"beta":false,"name":"watchOS"}],"symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"alert"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"text":"M","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4TextV","text":"Text"},{"kind":"text","text":", "},{"kind":"externalParam","text":"isPresented"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"actions"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"text":"message","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"alert","kind":"identifier"},{"kind":"text","text":"<"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"M","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"title","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Text","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4TextV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"isPresented"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"text":"<","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":">, "},{"kind":"attribute","text":"@"},{"text":"ViewBuilder","preciseIdentifier":"s:7SwiftUI11ViewBuilderV","kind":"attribute"},{"kind":"text","text":" "},{"kind":"externalParam","text":"actions"},{"text":": () -> ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:7SwiftUI11ViewBuilderV","kind":"attribute","text":"ViewBuilder"},{"text":" ","kind":"text"},{"text":"message","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"M"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/alert(_:isPresented:actions:message:)-3ac7a"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"title":"SwitchStore","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"topic","url":"\/documentation\/composablearchitecture\/switchstore","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference","isActive":true},{"type":"text","text":" views."}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/alert(_:isPresented:actions:message:)-3ac7a":{"url":"\/documentation\/composablearchitecture\/switchstore\/alert(_:ispresented:actions:message:)-3ac7a","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/alert(_:isPresented:actions:message:)-3ac7a","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"alert"},{"kind":"text","text":"<"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"M","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4TextV","text":"Text","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"isPresented","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"actions"},{"text":": () -> ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"message","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"abstract":[],"role":"symbol","kind":"symbol","title":"alert(_:isPresented:actions:message:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"title":"View Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","kind":"article","type":"topic","title":"Deprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"url":"\/documentation\/composablearchitecture\/caselet","type":"topic","deprecated":true,"kind":"symbol","title":"CaseLet","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","role":"symbol"}}}