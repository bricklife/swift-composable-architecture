{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore\/init(projectedValue:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"projectedValue"},{"text":": ","kind":"text"},{"text":"BindingViewStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":">)","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/bindingviewstore\/init(projectedvalue:)"]}],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"projectedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">)"}],"symbolKind":"init","roleHeading":"Initializer","externalID":"s:22ComposableArchitecture16BindingViewStoreV14projectedValueACyxGAE_tcfc","role":"symbol","title":"init(projectedValue:)","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"]]},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingViewState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingviewstate","type":"topic","title":"BindingViewState","navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"text":" ","type":"text"},{"type":"text","text":"bindable in SwiftUI views."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore/init(projectedValue:)":{"role":"symbol","url":"\/documentation\/composablearchitecture\/bindingviewstore\/init(projectedvalue:)","type":"topic","abstract":[],"title":"init(projectedValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore\/init(projectedValue:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewStore","kind":"identifier"}],"deprecated":true,"title":"ViewStore","url":"\/documentation\/composablearchitecture\/viewstore","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"type":"text","text":" "},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","kind":"article","type":"topic","title":"Deprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"url":"\/documentation\/composablearchitecture\/bindingviewstore","abstract":[{"type":"text","text":"A property wrapper type that can derive "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","isActive":true,"type":"reference"},{"text":" values for a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"text":".","type":"text"}],"navigatorTitle":[{"text":"BindingViewStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingViewStore","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"BindingViewStore"}}}