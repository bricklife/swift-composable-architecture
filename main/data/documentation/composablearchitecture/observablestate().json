{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"]]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState"],"title":"Conformance","anchor":"Conformance"},{"title":"Change tracking","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"],"anchor":"Change-tracking"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()"],"title":"Supporting macros","anchor":"Supporting-macros"}],"abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/observablestate()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Observation10ObservableP","text":"Observable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","text":"ObservableState","preciseIdentifier":"s:22ComposableArchitecture15ObservableStateP"},{"text":") ","kind":"text"},{"kind":"attribute","text":"@attached"},{"text":"(member, names: named(_$id), named(_$observationRegistrar), named(_$willModify)) ","kind":"text"},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(memberAttribute) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","interfaceLanguage":"swift"},"metadata":{"symbolKind":"macro","title":"ObservableState()","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"},{"kind":"text","text":"()"}],"externalID":"s:22ComposableArchitecture15ObservableStateyycfm","roleHeading":"Macro","modules":[{"name":"ComposableArchitecture"}]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateTracked()":{"url":"\/documentation\/composablearchitecture\/observationstatetracked()","title":"ObservationStateTracked()","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()","abstract":[],"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservationStateTracked","kind":"identifier"},{"kind":"text","text":"()"}],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","title":"ObservableState()","abstract":[{"type":"text","text":"Defines and implements conformance of the Observable protocol."}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/observablestate()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","navigatorTitle":[{"text":"ObservableStateID","kind":"identifier"}],"title":"ObservableStateID","abstract":[{"type":"text","text":"A unique identifier for a observed value."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservableStateID","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/observablestateid"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"required":true,"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","url":"\/documentation\/composablearchitecture\/reducer\/state","title":"State","kind":"symbol","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"ObservableState"}],"url":"\/documentation\/composablearchitecture\/observablestate","role":"symbol","title":"ObservableState","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateIgnored()":{"url":"\/documentation\/composablearchitecture\/observationstateignored()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservationStateIgnored"},{"text":"()","kind":"text"}],"abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()","title":"ObservationStateIgnored()","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar","navigatorTitle":[{"text":"ObservationStateRegistrar","kind":"identifier"}],"abstract":[{"type":"text","text":"Provides storage for tracking and access to data changes."}],"kind":"symbol","role":"symbol","type":"topic","title":"ObservationStateRegistrar","url":"\/documentation\/composablearchitecture\/observationstateregistrar","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservationStateRegistrar"}]}}}