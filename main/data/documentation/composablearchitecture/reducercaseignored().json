{"kind":"symbol","seeAlsoSections":[{"title":"Enum reducers","generated":true,"anchor":"Enum-reducers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState"]}],"abstract":[{"type":"text","text":"Marks the case of an enum reducer as “ignored”, and as such will not compose the case’s domain"},{"text":" ","type":"text"},{"text":"into the rest of the reducer besides state.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"ReducerCaseIgnored()","roleHeading":"Macro","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReducerCaseIgnored","kind":"identifier"},{"text":"()","kind":"text"}],"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture18ReducerCaseIgnoredyycfm","role":"symbol","symbolKind":"macro"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/reducercaseignored()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(peer, names: named(`_`)) "},{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerCaseIgnored"},{"kind":"text","text":"()"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Apply this macro to cases that do not hold onto reducer features, and instead hold onto plain"},{"type":"text","text":" "},{"text":"data that needs to be passed to a child view.","type":"text"}]},{"type":"codeListing","code":["@Reducer","enum Destination {","  @ReducerCaseIgnored","  case meeting(id: Meeting.ID)","  \/\/ ...","}"],"syntax":"swift"}],"kind":"content"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","interfaceLanguage":"swift"},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseIgnored()":{"url":"\/documentation\/composablearchitecture\/reducercaseignored()","title":"ReducerCaseIgnored()","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","abstract":[{"text":"Marks the case of an enum reducer as “ignored”, and as such will not compose the case’s domain","type":"text"},{"type":"text","text":" "},{"type":"text","text":"into the rest of the reducer besides state."}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerCaseIgnored","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducer":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"CaseReducer","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseReducer"}],"abstract":[{"type":"text","text":"A reducer represented by multiple enum cases."}],"url":"\/documentation\/composablearchitecture\/casereducer","title":"CaseReducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducerState":{"role":"symbol","navigatorTitle":[{"text":"CaseReducerState","kind":"identifier"}],"title":"CaseReducerState","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState","abstract":[{"text":"A state type that is associated with a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","isActive":true},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"CaseReducerState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/casereducerstate","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"abstract":[{"text":"Helps implement the conformance to the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"reference","isActive":true},{"type":"text","text":" protocol for a type."}],"role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"()"}],"url":"\/documentation\/composablearchitecture\/reducer()","kind":"symbol","title":"Reducer()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer(state:action:)":{"title":"Reducer(state:action:)","kind":"symbol","abstract":[{"type":"text","text":"An overload of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"type":"text","text":" that takes a description of protocol conformances to synthesize on"},{"text":" ","type":"text"},{"type":"text","text":"the State and Action types"}],"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer(state:action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","deprecated":true,"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"},{"kind":"text","text":"("},{"text":"state","kind":"externalParam"},{"kind":"text","text":": "},{"text":"_SynthesizedConformance","preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"_SynthesizedConformance","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV"},{"text":"...)","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseEphemeral()":{"url":"\/documentation\/composablearchitecture\/reducercaseephemeral()","title":"ReducerCaseEphemeral()","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()","abstract":[{"text":"Marks the case of an enum reducer as holding onto “ephemeral” state.","type":"text"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerCaseEphemeral","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"}}}