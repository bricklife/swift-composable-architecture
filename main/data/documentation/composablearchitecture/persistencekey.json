{"metadata":{"role":"symbol","symbolKind":"protocol","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistenceKey","kind":"identifier"}],"roleHeading":"Protocol","title":"PersistenceKey","externalID":"s:22ComposableArchitecture14PersistenceKeyP","navigatorTitle":[{"text":"PersistenceKey","kind":"identifier"}]},"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","doc:\/\/ComposableArchitecture\/s8SendableP"]},{"title":"Conforming Types","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault"],"type":"conformingTypes","kind":"relationships"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey"},"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey\/save(_:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true}],"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"A type that can persist shared state to an external storage."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PersistenceKey","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa"},{"text":"> : ","kind":"text"},{"text":"PersistenceReaderKey","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conform to this protocol to express persistence to some external storage by describing how to"},{"type":"text","text":" "},{"text":"save to and load from the external storage, and providing a stream of values that represents","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"when the external storage is changed from the outside. It is only necessary to conform to this"},{"type":"text","text":" "},{"type":"text","text":"protocol if the "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","type":"reference"},{"text":", ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","type":"reference","isActive":true},{"text":", or ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey"},{"text":" strategies are not","type":"text"},{"type":"text","text":" "},{"text":"sufficient for your use case.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"See the article ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","isActive":true},{"type":"text","text":" for more information, in particular the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Custom-persistence","isActive":true},{"text":" section.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/persistencekey"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]]},"seeAlsoSections":[{"title":"Sharing state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared"],"generated":true,"anchor":"Sharing-state"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"title":"Sharing state","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","url":"\/documentation\/composablearchitecture\/sharingstate","abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"type":"topic","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState#Custom-persistence":{"title":"Custom persistence","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Custom-persistence","type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate#Custom-persistence","abstract":[],"kind":"section"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"navigatorTitle":[{"text":"AppStorageKeyPathKey","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppStorageKeyPathKey"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","role":"symbol","kind":"symbol","abstract":[{"text":"A type defining a user defaults persistence strategy via key path.","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"AppStorageKeyPathKey","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"title":"Shared","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","url":"\/documentation\/composablearchitecture\/shared","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Shared","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Shared","kind":"identifier"}]},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","title":"InMemoryKey","navigatorTitle":[{"kind":"identifier","text":"InMemoryKey"}],"type":"topic","abstract":[{"text":"A type defining an in-memory persistence strategy","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/inmemorykey","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InMemoryKey"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey":{"title":"FileStorageKey","navigatorTitle":[{"kind":"identifier","text":"FileStorageKey"}],"url":"\/documentation\/composablearchitecture\/filestoragekey","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"FileStorageKey","kind":"identifier"}],"abstract":[{"type":"text","text":"A type defining a file persistence strategy"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKey":{"navigatorTitle":[{"text":"AppStorageKey","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppStorageKey","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy."}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"title":"AppStorageKey","url":"\/documentation\/composablearchitecture\/appstoragekey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"abstract":[{"text":"A type that can load and subscribe to state in an external system.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PersistenceReaderKey","kind":"identifier"}],"title":"PersistenceReaderKey","url":"\/documentation\/composablearchitecture\/persistencereaderkey","navigatorTitle":[{"kind":"identifier","text":"PersistenceReaderKey"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey/save(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey\/save(_:)","role":"symbol","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"save","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Saves a value to storage."}],"title":"save(_:)","url":"\/documentation\/composablearchitecture\/persistencekey\/save(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey":{"abstract":[{"text":"A type that can persist shared state to an external storage.","type":"text"}],"role":"symbol","type":"topic","title":"PersistenceKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","url":"\/documentation\/composablearchitecture\/persistencekey","kind":"symbol","navigatorTitle":[{"text":"PersistenceKey","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceKey"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault":{"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/persistencekeydefault","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PersistenceKey","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"PersistenceKeyDefault","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceKeyDefault"}],"navigatorTitle":[{"kind":"identifier","text":"PersistenceKeyDefault"}],"abstract":[{"text":"A persistence key that provides a default value to an existing persistence key.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/Value":{"required":true,"title":"Value","abstract":[{"type":"text","text":"A type that can be loaded or subscribed to in an external system."}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/value","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"role":"symbol"}}}