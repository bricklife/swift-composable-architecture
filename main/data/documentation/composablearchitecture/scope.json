{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope"},"metadata":{"symbolKind":"struct","title":"Scope","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"navigatorTitle":[{"kind":"identifier","text":"Scope"}],"externalID":"s:22ComposableArchitecture5ScopeV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"roleHeading":"Structure"},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:filePath:line:column:)-2r2pn","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifCaseLet(_:action:then:fileID:filePath:line:column:)-7sg8d","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],"anchor":"Embedding-child-features","generated":true,"title":"Embedding child features"}],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:)-88vdx"],"title":"Struct state","anchor":"Struct-state"},{"anchor":"Enum-state","title":"Enum state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:fileID:filePath:line:column:)-9g44g"]},{"title":"Deprecations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ScopeDeprecations"],"anchor":"Deprecations"},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/reduce(into:action:)"],"anchor":"Instance-Methods"},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations"]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"],"title":"Conforms To","kind":"relationships"}],"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ParentState"},{"kind":"text","text":", "},{"text":"ParentAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Child"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Child","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Reducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true},{"text":" allows you to transform a parent domain into a child domain, and then run a child","type":"text"},{"type":"text","text":" "},{"text":"reduce on that subset domain. This is an important tool for breaking down large features into","type":"text"},{"type":"text","text":" "},{"type":"text","text":"smaller units and then piecing them together. The smaller units can be easier to understand and"},{"text":" ","type":"text"},{"text":"test, and can even be packaged into their own isolated modules.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"You hand ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope"},{"type":"text","text":" 3 pieces of data for it to do its job:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A writable key path that identifies the child state inside the parent state.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"A case path that identifies the child actions inside the parent actions."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"A @"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","isActive":true},{"text":" closure that describes the reducer you want to run on the child domain.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"When run, it will intercept all child actions sent and feed them to the child reducer so that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"it can update the parent state and execute effects."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, given the basic scaffolding of child reducer:"}]},{"type":"codeListing","syntax":"swift","code":["@Reducer","struct Child {","  struct State {","    \/\/ ...","  }","  enum Action {","    \/\/ ...","  }","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parent reducer with a domain that holds onto the child domain can use"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:)-88vdx","isActive":true},{"text":" to embed the child reducer in its","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t"},{"text":":","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct Parent {","  struct State {","    var child: Child.State","    \/\/ ...","  }","","  enum Action {","    case child(Child.Action)","    \/\/ ...","  }","","  var body: some Reducer<State, Action> {","    Scope(state: \\.child, action: \\.child) {","      Child()","    }","    Reduce { state, action in","      \/\/ Additional parent logic and behavior","    }","  }","}"]},{"level":2,"type":"heading","text":"Enum state","anchor":"Enum-state"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true,"type":"reference"},{"text":" reducer also works when state is modeled as an enum, not just a struct. In that","type":"text"},{"text":" ","type":"text"},{"text":"case you can use ","type":"text"},{"code":"init(state:action:child:fileID:filePath:line:column:)","type":"codeVoice"},{"text":" to specify a case","type":"text"},{"type":"text","text":" "},{"text":"path that identifies the case of state you want to scope to.","type":"text"}]},{"inlineContent":[{"type":"text","text":"For example, if your state was modeled as an enum for unloaded\/loading\/loaded, you could"},{"type":"text","text":" "},{"type":"text","text":"scope to the loaded case to run a reduce on only that case:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Reducer","struct Feature {","  enum State {","    case unloaded","    case loading","    case loaded(Child.State)","  }","  enum Action {","    case child(Child.Action)","    \/\/ ...","  }","","  var body: some Reducer<State, Action> {","    Scope(state: \\.loaded, action: \\.child) {","      Child()","    }","    Reduce { state, action in","      \/\/ Additional feature logic and behavior","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is important to note that the order of combine "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true},{"text":" and your additional feature logic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"matters. It must be combined before the additional logic. In the other order it would be"},{"type":"text","text":" "},{"text":"possible for the feature to intercept a child action, switch the state to another case, and","type":"text"},{"type":"text","text":" "},{"text":"then the scoped child reducer would not be able to react to that action. That can cause subtle","type":"text"},{"text":" ","type":"text"},{"text":"bugs, and so we show a runtime warning in that case, and cause test failures.","type":"text"}]},{"inlineContent":[{"text":"For an alternative to using ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope"},{"text":" with state case paths that enforces the order, check out","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"ifCaseLet(_:action:then:fileID:line:)-7zcm0","type":"codeVoice"},{"type":"text","text":" operator."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/scope"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/body-20w8t":{"required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP4BodyQa","text":"Body"}],"url":"\/documentation\/composablearchitecture\/reducer\/body-20w8t","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","title":"body","kind":"symbol","type":"topic","defaultImplementations":2,"role":"symbol","abstract":[{"text":"The content and behavior of a reducer that is composed from other reducers.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/Reducer-Implementations":{"role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/composablearchitecture\/scope\/reducer-implementations","type":"topic","title":"Reducer Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/reduce(into:action:)":{"url":"\/documentation\/composablearchitecture\/scope\/reduce(into:action:)","abstract":[],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/reduce(into:action:)","title":"reduce(into:action:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParentState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"text":"ParentAction","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"title":"ReducerBuilder","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","url":"\/documentation\/composablearchitecture\/reducerbuilder","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReducerBuilder","kind":"identifier"}],"abstract":[{"text":"A result builder for combining reducers into a single reducer by running each, one after the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"other, and merging their effects."}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReducerBuilder"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/init(state:action:child:fileID:filePath:line:column:)-9g44g":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:fileID:filePath:line:column:)-9g44g","url":"\/documentation\/composablearchitecture\/scope\/init(state:action:child:fileid:filepath:line:column:)-9g44g","role":"symbol","title":"init(state:action:child:fileID:filePath:line:column:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ParentState"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"text":"ParentAction","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"child"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Child"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"text":"Initializes a reducer that runs the given child reducer against a slice of parent state and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"actions."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ScopeDeprecations":{"url":"\/documentation\/composablearchitecture\/scopedeprecations","kind":"article","title":"Deprecations","abstract":[{"text":"Review unsupported reducer APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ScopeDeprecations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifCaseLet(_:action:then:fileID:filePath:line:column:)-7sg8d":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"ifCaseLet","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"CaseState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"CaseAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Case"},{"text":">(","kind":"text"},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"CaseState"},{"kind":"text","text":">, "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"CaseAction","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"then"},{"text":": () -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"text":"_IfCaseLetReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Case","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/ifcaselet(_:action:then:fileid:filepath:line:column:)-7sg8d","abstract":[{"text":"Embeds a child reducer in a parent domain that works on a case of parent enum state.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifCaseLet(_:action:then:fileID:filePath:line:column:)-7sg8d","type":"topic","title":"ifCaseLet(_:action:then:fileID:filePath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:then:fileID:filePath:line:column:)-2r2pn":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:filePath:line:column:)-2r2pn","title":"ifLet(_:action:then:fileID:filePath:line:column:)","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on an optional property of parent state."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifLet"},{"text":"<","kind":"text"},{"text":"WrappedState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"WrappedAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Wrapped","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"WrappedState","kind":"typeIdentifier"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"kind":"text","text":", "},{"text":"WrappedAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier","text":"Reducer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">\n","kind":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:then:fileid:filepath:line:column:)-2r2pn"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","type":"topic","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","title":"Navigation","kind":"article","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"navigatorTitle":[{"text":"Scope","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Scope","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/scope","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain."}],"role":"symbol","title":"Scope","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/init(state:action:child:)-88vdx":{"url":"\/documentation\/composablearchitecture\/scope\/init(state:action:child:)-88vdx","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ChildState"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ChildAction"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"ParentState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":">, "},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentAction","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"child"},{"text":": () -> ","kind":"text"},{"text":"Child","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Initializes a reducer that runs the given child reducer against a slice of parent state and","type":"text"},{"text":" ","type":"text"},{"text":"actions.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:)-88vdx","title":"init(state:action:child:)","kind":"symbol","role":"symbol"}}}