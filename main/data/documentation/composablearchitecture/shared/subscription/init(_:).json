{"metadata":{"modules":[{"name":"ComposableArchitecture"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Initializer","symbolKind":"init","role":"symbol","externalID":"s:22ComposableArchitecture6SharedV12SubscriptionCyAEyx_Gyyccfc","title":"init(_:)"},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"cancel","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"cancel","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that the ","type":"text"},{"type":"codeVoice","code":"cancel()"},{"type":"text","text":" method executes."}]}]}]}],"abstract":[{"type":"text","text":"Initializes the subscription with the given cancel closure."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/Subscription\/init(_:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/Subscription"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/Subscription"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/Subscription"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/shared\/subscription\/init(_:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"title":"Sharing state","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","url":"\/documentation\/composablearchitecture\/sharingstate","abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"type":"topic","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared/Subscription/init(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/Subscription\/init(_:)","abstract":[{"type":"text","text":"Initializes the subscription with the given cancel closure."}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/shared\/subscription\/init(_:)","kind":"symbol","title":"init(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared/Subscription":{"abstract":[{"type":"text","text":"A subscription to a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","isActive":true,"type":"reference"},{"text":"â€™s updates.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared\/Subscription","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Subscription","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"title":"Shared.Subscription","url":"\/documentation\/composablearchitecture\/shared\/subscription","navigatorTitle":[{"text":"Subscription","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"abstract":[{"text":"A type that can load and subscribe to state in an external system.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PersistenceReaderKey","kind":"identifier"}],"title":"PersistenceReaderKey","url":"\/documentation\/composablearchitecture\/persistencereaderkey","navigatorTitle":[{"kind":"identifier","text":"PersistenceReaderKey"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"title":"Shared","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","url":"\/documentation\/composablearchitecture\/shared","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Shared","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Shared","kind":"identifier"}]}}}