{"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/10CustomDump0aB13RepresentableP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/s17CustomReflectableP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH"],"type":"conformsTo"}],"kind":"symbol","seeAlsoSections":[{"title":"Bindings","anchor":"Bindings","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState"},"metadata":{"externalID":"s:22ComposableArchitecture16BindingViewStateV","title":"BindingViewState","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingViewState"}],"role":"symbol","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"BindingViewState"}],"roleHeading":"Structure"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"type":"text","text":" "},{"type":"text","text":"bindable in SwiftUI views."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/bindingviewstate"]}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/projectedValue","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/wrappedValue"],"title":"Instance Properties","anchor":"Instance-Properties"},{"anchor":"Subscripts","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)"],"title":"Subscripts","generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDumpRepresentable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Hashable-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@dynamicMemberLookup"},{"kind":"text","text":" "},{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingViewState"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"Read "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","isActive":true,"type":"reference"},{"text":" for more information.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/subscript(dynamicMember:)":{"fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Subject"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV","text":"BindingViewState","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","title":"subscript(dynamicMember:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/bindingviewstate\/subscript(dynamicmember:)","role":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","kind":"article","type":"topic","title":"Deprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Bindings":{"role":"article","kind":"article","abstract":[{"text":"Learn how to connect features written in the Composable Architecture to SwiftUI bindings.","type":"text"}],"title":"Working with SwiftUI bindings","url":"\/documentation\/composablearchitecture\/bindings","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings"},"doc://ComposableArchitecture/SH":{"identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomReflectable-Implementations":{"url":"\/documentation\/composablearchitecture\/bindingviewstate\/customreflectable-implementations","title":"CustomReflectable Implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations","abstract":[],"kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewStore","kind":"identifier"}],"deprecated":true,"title":"ViewStore","url":"\/documentation\/composablearchitecture\/viewstore","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"type":"text","text":" "},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/projectedValue":{"title":"projectedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"url":"\/documentation\/composablearchitecture\/bindingviewstate\/projectedvalue","type":"topic","role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/projectedValue"},"doc://ComposableArchitecture/10CustomDump0aB13RepresentableP":{"identifier":"doc:\/\/ComposableArchitecture\/10CustomDump0aB13RepresentableP","title":"CustomDump.CustomDumpRepresentable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/Equatable-Implementations":{"url":"\/documentation\/composablearchitecture\/bindingviewstate\/equatable-implementations","abstract":[],"kind":"article","title":"Equatable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Equatable-Implementations","role":"collectionGroup","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomDebugStringConvertible-Implementations":{"abstract":[],"type":"topic","title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customdebugstringconvertible-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDebugStringConvertible-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomDumpRepresentable-Implementations":{"role":"collectionGroup","title":"CustomDumpRepresentable Implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDumpRepresentable-Implementations","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customdumprepresentable-implementations","type":"topic","abstract":[]},"doc://ComposableArchitecture/s17CustomReflectableP":{"identifier":"doc:\/\/ComposableArchitecture\/s17CustomReflectableP","title":"Swift.CustomReflectable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"url":"\/documentation\/composablearchitecture\/bindingviewstore","abstract":[{"type":"text","text":"A property wrapper type that can derive "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","isActive":true,"type":"reference"},{"text":" values for a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"text":".","type":"text"}],"navigatorTitle":[{"text":"BindingViewStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingViewStore","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"BindingViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState":{"abstract":[{"text":"A property wrapper type that can designate properties of app state that can be directly bindable","type":"text"},{"type":"text","text":" "},{"text":"in SwiftUI views.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingState","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/bindingstate","title":"BindingState","navigatorTitle":[{"text":"BindingState","kind":"identifier"}],"role":"symbol","deprecated":true},"doc://ComposableArchitecture/s8CopyableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/Hashable-Implementations":{"url":"\/documentation\/composablearchitecture\/bindingviewstate\/hashable-implementations","title":"Hashable Implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Hashable-Implementations","abstract":[],"kind":"article","type":"topic"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingViewState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingviewstate","type":"topic","title":"BindingViewState","navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"text":" ","type":"text"},{"type":"text","text":"bindable in SwiftUI views."}]},"doc://ComposableArchitecture/SQ":{"identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/wrappedValue":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/bindingviewstate\/wrappedvalue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/wrappedValue","type":"topic","title":"wrappedValue","abstract":[]}}}