{"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],"title":"State management","anchor":"State-management"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/store"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"modules":[{"name":"ComposableArchitecture"}],"title":"Store","roleHeading":"Class","externalID":"s:22ComposableArchitecture5StoreC","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Store"}],"symbolKind":"class"},"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"attribute","text":"@dynamicMemberLookup"},{"kind":"text","text":" "},{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Store","kind":"identifier"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will typically construct a single one of these at the root of your application:"}]},{"type":"codeListing","code":["@main","struct MyApp: App {","  var body: some Scene {","    WindowGroup {","      RootView(","        store: Store(initialState: AppFeature.State()) {","          AppFeature()","        }","      )","    }","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"…and then use the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","isActive":true,"type":"reference"},{"type":"text","text":" method to derive more focused stores that can be"},{"text":" ","type":"text"},{"type":"text","text":"passed to subviews."}]},{"anchor":"Scoping","type":"heading","text":"Scoping","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most important operation defined on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" is the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","isActive":true,"type":"reference"},{"type":"text","text":" method,"},{"type":"text","text":" "},{"text":"which allows you to transform a store into one that deals with child state and actions. This is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"necessary for passing stores to subviews that only care about a small portion of the entire"},{"type":"text","text":" "},{"text":"application’s domain.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if an application has a tab view at its root with tabs for activity, search, and"},{"type":"text","text":" "},{"type":"text","text":"profile, then we can model the domain like this:"}]},{"code":["@Reducer","struct AppFeature {","  struct State {","    var activity: Activity.State","    var profile: Profile.State","    var search: Search.State","  }","","  enum Action {","    case activity(Activity.Action)","    case profile(Profile.Action)","    case search(Search.Action)","  }","","  \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"We can construct a view for each of these domains by applying ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","type":"reference","isActive":true},{"text":" to","type":"text"},{"text":" ","type":"text"},{"text":"a store that holds onto the full app domain in order to transform it into a store for each","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"subdomain:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct AppView: View {","  let store: StoreOf<AppFeature>","","  var body: some View {","    TabView {","      ActivityView(","        store: store.scope(state: \\.activity, action: \\.activity)","      )","      .tabItem { Text(\"Activity\") }","","      SearchView(","        store: store.scope(state: \\.search, action: \\.search)","      )","      .tabItem { Text(\"Search\") }","","      ProfileView(","        store: store.scope(state: \\.profile, action: \\.profile)","      )","      .tabItem { Text(\"Profile\") }","    }","  }","}"]},{"level":3,"type":"heading","text":"Thread safety","anchor":"Thread-safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Store"},{"text":" class is not thread-safe, and so all interactions with an instance of ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference","isActive":true},{"type":"text","text":" "},{"text":"(including all of its child stores) must be done on the same thread the store was created on.","type":"text"},{"text":" ","type":"text"},{"text":"Further, if the store is powering a SwiftUI or UIKit view, as is customary, then all","type":"text"},{"text":" ","type":"text"},{"text":"interactions must be done on the ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"main"}]},{"text":" thread.","type":"text"}]},{"inlineContent":[{"text":"The reason stores are not thread-safe is due to the fact that when an action is sent to a store,","type":"text"},{"type":"text","text":" "},{"text":"a reducer is run on the current state, and this process cannot be done from multiple threads.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It is possible to make this process thread-safe by introducing locks or queues, but this"},{"text":" ","type":"text"},{"text":"introduces new complications:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"If done simply with ","type":"text"},{"type":"codeVoice","code":"DispatchQueue.main.async"},{"text":" you will incur a thread hop even when you are","type":"text"},{"type":"text","text":" "},{"type":"text","text":"already on the main thread. This can lead to unexpected behavior in UIKit and SwiftUI, where"},{"text":" ","type":"text"},{"text":"sometimes you are required to do work synchronously, such as in animation blocks.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"It is possible to create a scheduler that performs its work immediately when on the main","type":"text"},{"text":" ","type":"text"},{"text":"thread and otherwise uses ","type":"text"},{"type":"codeVoice","code":"DispatchQueue.main.async"},{"type":"text","text":" ("},{"inlineContent":[{"text":"e.g.","type":"text"}],"type":"emphasis"},{"type":"text","text":", see Combine Schedulers’"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","isActive":true},{"text":").","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"This introduces a lot more complexity, and should probably not be adopted without having a very"},{"type":"text","text":" "},{"text":"good reason.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This is why we require all actions be sent from the same thread. This requirement is in the same","type":"text"},{"type":"text","text":" "},{"type":"text","text":"spirit of how "},{"type":"codeVoice","code":"URLSession"},{"text":" and other Apple APIs are designed. Those APIs tend to deliver their","type":"text"},{"type":"text","text":" "},{"text":"outputs on whatever thread is most convenient for them, and then it is your responsibility to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"dispatch back to the main queue if that’s what you need. The Composable Architecture makes you"},{"type":"text","text":" "},{"text":"responsible for making sure to send actions on the main thread. If you are using an effect that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"may deliver its output on a non-main thread, you must explicitly perform "},{"code":".receive(on:)","type":"codeVoice"},{"text":" in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"order to force it back on the main thread."}]},{"inlineContent":[{"type":"text","text":"This approach makes the fewest number of assumptions about how effects are created and"},{"type":"text","text":" "},{"type":"text","text":"transformed, and prevents unnecessary thread hops and re-dispatching. It also provides some"},{"type":"text","text":" "},{"text":"testing benefits. If your effects are not responsible for their own scheduling, then in tests","type":"text"},{"type":"text","text":" "},{"text":"all of the effects would run synchronously and immediately. You would not be able to test how","type":"text"},{"type":"text","text":" "},{"text":"multiple in-flight effects interleave with each other and affect the state of your application.","type":"text"},{"type":"text","text":" "},{"text":"However, by leaving scheduling out of the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference"},{"text":" we get to test these aspects of our effects","type":"text"},{"text":" ","type":"text"},{"text":"if we so desire, or we can ignore if we prefer. We have that flexibility.","type":"text"}],"type":"paragraph"},{"text":"Thread safety checks","type":"heading","level":4,"anchor":"Thread-safety-checks"},{"inlineContent":[{"type":"text","text":"The store performs some basic thread safety checks in order to help catch mistakes. Stores"},{"text":" ","type":"text"},{"type":"text","text":"constructed via the initializer "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)","isActive":true,"type":"reference"},{"text":" are assumed","type":"text"},{"text":" ","type":"text"},{"text":"to run only on the main thread, and so a check is executed immediately to make sure that is the","type":"text"},{"type":"text","text":" "},{"text":"case. Further, all actions sent to the store and all scopes (see ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","isActive":true},{"type":"text","text":")"},{"text":" ","type":"text"},{"text":"of the store are also checked to make sure that work is performed on the main thread.","type":"text"}],"type":"paragraph"}]}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/11Observation10ObservableP","doc:\/\/ComposableArchitecture\/10Perception11PerceptibleP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s12IdentifiableP","doc:\/\/ComposableArchitecture\/s8SendableP"],"type":"conformsTo"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreOf"],"title":"Creating a store","anchor":"Creating-a-store"},{"anchor":"Accessing-state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)"],"title":"Accessing state"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask"],"anchor":"Sending-actions","title":"Sending actions"},{"anchor":"Scoping-stores","title":"Scoping stores","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-3yvuf","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-2ym6k","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case"]},{"title":"Combine integration","anchor":"Combine-integration","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreDeprecations"],"anchor":"Deprecated-interfaces","title":"Deprecated interfaces"},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-20w4g","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-2wgiw"],"generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Hashable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Identifiable-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations","generated":true}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","interfaceLanguage":"swift"},"sections":[],"references":{"doc://ComposableArchitecture/s12IdentifiableP":{"identifier":"doc:\/\/ComposableArchitecture\/s12IdentifiableP","title":"Swift.Identifiable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask","kind":"typeIdentifier"}],"type":"topic","title":"send(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/send(_:)","role":"symbol","abstract":[{"text":"Sends an action to the store.","type":"text"}]},"doc://ComposableArchitecture/10Perception11PerceptibleP":{"identifier":"doc:\/\/ComposableArchitecture\/10Perception11PerceptibleP","title":"Perception.Perceptible","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-2wgiw":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"}],"type":"topic","title":"state","conformance":{"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"text":", ","type":"text"},{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":", "},{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"State","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Action.State","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Action","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BindableAction"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/composablearchitecture\/store\/state-2wgiw","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-2wgiw","role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Hashable-Implementations":{"kind":"article","title":"Hashable Implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Hashable-Implementations","abstract":[],"url":"\/documentation\/composablearchitecture\/store\/hashable-implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Identifiable-Implementations":{"url":"\/documentation\/composablearchitecture\/store\/identifiable-implementations","title":"Identifiable Implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Identifiable-Implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/CustomDebugStringConvertible-Implementations":{"kind":"article","title":"CustomDebugStringConvertible Implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/CustomDebugStringConvertible-Implementations","abstract":[],"url":"\/documentation\/composablearchitecture\/store\/customdebugstringconvertible-implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:transaction:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/send(_:transaction:)","type":"topic","role":"symbol","title":"send(_:transaction:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transaction"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Transaction","preciseIdentifier":"s:7SwiftUI11TransactionV"},{"kind":"text","text":") -> "},{"text":"StoreTask","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Sends an action to the store with a given transaction."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/withState(_:)":{"url":"\/documentation\/composablearchitecture\/store\/withstate(_:)","title":"withState(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withState","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","kind":"symbol","role":"symbol","abstract":[{"text":"Calls the given closure with a snapshot of the current state of the store.","type":"text"}]},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreOf":{"abstract":[{"text":"A convenience type alias for referring to a store of a given reducer’s domain.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreOf","url":"\/documentation\/composablearchitecture\/storeof","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StoreOf"}],"navigatorTitle":[{"text":"StoreOf","kind":"identifier"}],"title":"StoreOf"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-1qxwl":{"url":"\/documentation\/composablearchitecture\/store\/state-1qxwl","title":"state","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"kind":"text","text":": "},{"text":"State","kind":"typeIdentifier"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","kind":"symbol","role":"symbol","abstract":[{"text":"Direct access to state in the store when ","type":"text"},{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","isActive":true},{"text":".","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/init(initialState:reducer:withDependencies:)":{"kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Initializes a store from an initial state and a reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/store\/init(initialstate:reducer:withdependencies:)","fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"initialState"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@autoclosure "},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"reducer"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"R"},{"text":", ","kind":"text"},{"text":"withDependencies","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")?)","kind":"text"}],"title":"init(initialState:reducer:withDependencies:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"title":"Sharing state","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","url":"\/documentation\/composablearchitecture\/sharingstate","abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"type":"topic","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreTask":{"role":"symbol","type":"topic","title":"StoreTask","url":"\/documentation\/composablearchitecture\/storetask","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoreTask","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"StoreTask","kind":"identifier"}],"abstract":[{"type":"text","text":"The type returned from "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","isActive":true},{"text":" that represents the lifecycle of the effect","type":"text"},{"type":"text","text":" "},{"type":"text","text":"started from sending an action."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"title":"Store","role":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/s8CopyableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/subscript(dynamicMember:)-655ef":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","role":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"dynamicMember","kind":"externalParam"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Value"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ObservableState","type":"codeVoice"},{"type":"text","text":"."}]},"title":"subscript(dynamicMember:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/store\/subscript(dynamicmember:)-655ef"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/case":{"title":"case","abstract":[{"type":"text","text":"A destructurable view of a store on a collection of cases."}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/case","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"`case`","kind":"identifier"},{"kind":"text","text":": "},{"text":"State","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16CaseReducerStateP0eD0Qa","text":"StateReducer","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CaseScope","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11CaseReducerP0C5ScopeQa"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"CaseReducerState"},{"text":" and ","type":"text"},{"code":"Action","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"State.StateReducer.Action"},{"text":".","type":"text"}]},"role":"symbol"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:fileID:filePath:line:column:)-3yvuf":{"role":"symbol","type":"topic","title":"scope(state:action:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/store\/scope(state:action:fileid:filepath:line:column:)-3yvuf","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableState"},{"text":".","type":"text"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-3yvuf","abstract":[{"type":"text","text":"Scopes the store to optional child state and actions."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"kind":"text","text":"?>, "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"text":">, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">?","kind":"text"}]},"doc://ComposableArchitecture/11Observation10ObservableP":{"identifier":"doc:\/\/ComposableArchitecture\/11Observation10ObservableP","title":"Observation.Observable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:fileID:filePath:line:column:)-2ym6k":{"role":"symbol","type":"topic","title":"scope(state:action:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/store\/scope(state:action:fileid:filepath:line:column:)-2ym6k","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableState"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-2ym6k","abstract":[{"type":"text","text":"Scopes the store of an identified collection to a collection of stores."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ElementID","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElementState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElementAction","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"IdentifiedArray","kind":"typeIdentifier","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV"},{"text":"<","kind":"text"},{"text":"ElementID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementState"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO","text":"IdentifiedAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ElementID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementAction"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:Sk","text":"RandomAccessCollection","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"ElementState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementAction"},{"text":">>\n","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:animation:)":{"title":"send(_:animation:)","url":"\/documentation\/composablearchitecture\/store\/send(_:animation:)","abstract":[{"type":"text","text":"Sends an action to the store with a given animation."}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"animation"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI9AnimationV","kind":"typeIdentifier","text":"Animation"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"StoreTask","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"abstract":[{"type":"text","text":"Scopes the store to one that exposes child state and actions."}],"role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"text":"state","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChildState","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"text":"ChildState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","kind":"symbol","title":"scope(state:action:)"},"doc://ComposableArchitecture/SQ":{"identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://ComposableArchitecture/SH":{"identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreDeprecations":{"url":"\/documentation\/composablearchitecture\/storedeprecations","title":"Deprecations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreDeprecations","kind":"article","role":"collectionGroup","abstract":[{"text":"Review unsupported store APIs and their replacements.","type":"text"}]},"https://github.com/pointfreeco/combine-schedulers/blob/main/Sources/CombineSchedulers/UIScheduler.swift":{"identifier":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","title":"UIScheduler","titleInlineContent":[{"type":"text","text":"UIScheduler"}],"url":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","type":"link"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","navigatorTitle":[{"kind":"identifier","text":"StorePublisher"}],"kind":"symbol","abstract":[{"type":"text","text":"A publisher of store state."}],"title":"StorePublisher","role":"symbol","url":"\/documentation\/composablearchitecture\/storepublisher","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StorePublisher"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"ObservableState"}],"url":"\/documentation\/composablearchitecture\/observablestate","role":"symbol","title":"ObservableState","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Equatable-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Equatable-Implementations","kind":"article","url":"\/documentation\/composablearchitecture\/store\/equatable-implementations","type":"topic","role":"collectionGroup","title":"Equatable Implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-20w4g":{"url":"\/documentation\/composablearchitecture\/store\/state-20w4g","title":"state","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ObservableState","type":"codeVoice"},{"text":", ","type":"text"},{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":", "},{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"State"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Action.ViewAction.State"},{"type":"text","text":", "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"code":"ViewAction","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Action.ViewAction","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BindableAction","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-20w4g","kind":"symbol","role":"symbol","abstract":[]}}}