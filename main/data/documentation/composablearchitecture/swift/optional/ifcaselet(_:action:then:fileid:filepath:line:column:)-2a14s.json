{"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/ifCaseLet(_:action:then:fileID:filePath:line:column:)-2a14s","interfaceLanguage":"swift"},"sections":[],"metadata":{"extendedModule":"ComposableArchitecture","title":"ifCaseLet(_:action:then:fileID:filePath:line:column:)","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture7ReducerPAAE9ifCaseLet_6action4then6fileID0I4Path4line6columnAA03_IfefC0Vyxqd_1_Gs03KeyK0Cy0E5Paths0E0Vy5StateQzGARyqd__GG_AOyARy6ActionQzGARyqd_0_GGqd_1_yXEs12StaticStringVA2_S2utASQyd_1_Rsd__AXQyd_1_Rsd_0_AaBRd_1_AP0E8PathableAYRQAPA5_ATRQr1_lF::SYNTHESIZED::s:Sq","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifCaseLet"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"CaseState"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Case"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CaseState"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CaseAction"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"then"},{"text":": () -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":") -> ","kind":"text"},{"text":"_IfCaseLetReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Case"},{"text":">","kind":"text"}],"symbolKind":"method","roleHeading":"Instance Method"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on a case of parent enum state."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/Reducer-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@warn_unqualified_access","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ifCaseLet"},{"kind":"text","text":"<"},{"text":"CaseState","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"CaseAction"},{"text":", ","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"toCaseState"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},{"text":", ","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":" "},{"text":"toCaseAction","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action"},{"kind":"text","text":", "},{"text":"CaseAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:22ComposableArchitecture14ReducerBuilderO","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","kind":"attribute","text":"ReducerBuilder"},{"text":"<","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CaseAction"},{"text":">","kind":"text"},{"text":" ","kind":"text"},{"text":"then","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"case"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#fileID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#filePath"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#column"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_IfCaseLetReducer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Case","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"CaseState"},{"kind":"text","text":" == "},{"text":"Case","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":" : "},{"text":"Reducer","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"kind":"text","text":" : "},{"text":"CasePathable","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A8PathableP"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A8PathableP","kind":"typeIdentifier","text":"CasePathable"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"toCaseState","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A case path from parent state to a case containing child state."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A case path from parent action to a case containing child actions."}]}],"name":"toCaseAction"},{"name":"case","content":[{"inlineContent":[{"text":"A reducer that will be invoked with child actions against child state when it is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"present"}],"type":"paragraph"}]}]},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"A reducer that combines the child reducer with the parent reducer.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"For example, if a parent feature’s state is expressed as an enum of multiple children"},{"type":"text","text":" "},{"type":"text","text":"states, then "},{"type":"codeVoice","code":"ifCaseLet"},{"type":"text","text":" can run a child reducer on a particular case of the enum:"}],"type":"paragraph"},{"code":["@Reducer","struct Parent {","  enum State {","    case loggedIn(Authenticated.State)","    case loggedOut(Unauthenticated.State)","  }","  enum Action {","    case loggedIn(Authenticated.Action)","    case loggedOut(Unauthenticated.Action)","    \/\/ ...","  }","","  var body: some Reducer<State, Action> {","    Reduce { state, action in","      \/\/ Core logic for parent feature","    }","    .ifCaseLet(\\.loggedIn, action: \\.loggedIn) {","      Authenticated()","    }","    .ifCaseLet(\\.loggedOut, action: \\.loggedOut) {","      Unauthenticated()","    }","  }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"ifCaseLet","type":"codeVoice"},{"type":"text","text":" operator does a number of things to try to enforce correctness:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It forces a specific order of operations for the child and parent features. It runs the"},{"type":"text","text":" "},{"type":"text","text":"child first, and then the parent. If the order was reversed, then it would be possible for"},{"text":" ","type":"text"},{"type":"text","text":"the parent feature to change the case of the child enum, in which case the child"},{"type":"text","text":" "},{"text":"feature would not be able to react to that action. That can cause subtle bugs.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"It automatically cancels all child effects when it detects the child enum case changes.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is still possible for a parent feature higher up in the application to change the case of"},{"type":"text","text":" "},{"text":"the enum before the child has a chance to react to the action. In such cases a runtime","type":"text"},{"type":"text","text":" "},{"text":"warning is shown in Xcode to let you know that there’s a potential problem.","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/swift\/optional\/ifcaselet(_:action:then:fileid:filepath:line:column:)-2a14s"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","title":"Optional","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/swift\/optional","navigatorTitle":[{"kind":"identifier","text":"Optional"}],"abstract":[],"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sq","kind":"identifier","text":"Optional"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional/Reducer-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/Reducer-Implementations","title":"Reducer Implementations","kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swift\/optional\/reducer-implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"abstract":[{"type":"text","text":"A type that holds all possible actions that cause the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},{"type":"text","text":" of the reducer to change"},{"text":" ","type":"text"},{"text":"and\/or kick off a side ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":" that can communicate with the outside world.","type":"text"}],"required":true,"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","url":"\/documentation\/composablearchitecture\/reducer\/action","title":"Action","kind":"symbol","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Action","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional/ifCaseLet(_:action:then:fileID:filePath:line:column:)-2a14s":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/ifCaseLet(_:action:then:fileID:filePath:line:column:)-2a14s","title":"ifCaseLet(_:action:then:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/swift\/optional\/ifcaselet(_:action:then:fileid:filepath:line:column:)-2a14s","role":"symbol","type":"topic","abstract":[{"text":"Embeds a child reducer in a parent domain that works on a case of parent enum state.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ifCaseLet","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"CaseState"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"CaseAction"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Case"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"CaseState"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"CaseAction"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"then"},{"text":": () -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"_IfCaseLetReducer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"required":true,"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","url":"\/documentation\/composablearchitecture\/reducer\/state","title":"State","kind":"symbol","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"title":"ReducerBuilder","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","url":"\/documentation\/composablearchitecture\/reducerbuilder","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReducerBuilder","kind":"identifier"}],"abstract":[{"text":"A result builder for combining reducers into a single reducer by running each, one after the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"other, and merging their effects."}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReducerBuilder"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]}}}